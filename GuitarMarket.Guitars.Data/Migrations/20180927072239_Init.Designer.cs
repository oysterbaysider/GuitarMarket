// <auto-generated />
using System;
using GuitarMarket.Guitars.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GuitarMarket.Guitars.Data.Migrations
{
    [DbContext(typeof(GuitarContext))]
    [Migration("20180927072239_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview2-35157")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GuitarMarket.Domain.Guitars.Guitar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrandId");

                    b.Property<string>("Description");

                    b.Property<string>("Model");

                    b.Property<int>("Price");

                    b.Property<string>("Title");

                    b.Property<int?>("TypeId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("TypeId");

                    b.ToTable("Guitars");
                });

            modelBuilder.Entity("GuitarMarket.Domain.Guitars.GuitarBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand");

                    b.HasKey("Id");

                    b.ToTable("GuitarBrands");
                });

            modelBuilder.Entity("GuitarMarket.Domain.Guitars.GuitarModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrandId");

                    b.Property<string>("Model");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("GuitarModels");
                });

            modelBuilder.Entity("GuitarMarket.Domain.Guitars.GuitarType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("GuitarTypes");
                });

            modelBuilder.Entity("GuitarMarket.Domain.Guitars.Guitar", b =>
                {
                    b.HasOne("GuitarMarket.Domain.Guitars.GuitarBrand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("GuitarMarket.Domain.Guitars.GuitarType", "Type")
                        .WithMany("Guitars")
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("GuitarMarket.Domain.Guitars.GuitarModel", b =>
                {
                    b.HasOne("GuitarMarket.Domain.Guitars.GuitarBrand", "Brand")
                        .WithMany("Models")
                        .HasForeignKey("BrandId");
                });
#pragma warning restore 612, 618
        }
    }
}
